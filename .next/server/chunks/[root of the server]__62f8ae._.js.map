{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///Users/bryansagbay/Documents/nextjs-flutter-login-api/src/libs/database.ts"],"sourcesContent":["import mongoose from \"mongoose\";\n\n\nconst MONGO_URL = \"mongodb://127.0.0.1/udipsai\";\n\nexport const connectMongoDB = async () => {\n    try {\n        await mongoose.connect(MONGO_URL);\n        console.log('Conectado a la base de datos');\n    } catch (error) {\n        console.error('Error al conectar a la base de datos:', error);\n    }\n};\n"],"names":[],"mappings":";;;AAAA;;AAGA,MAAM,YAAY;AAEX,MAAM,iBAAiB;IAC1B,IAAI;QACA,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IAChB,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,yCAAyC;IAC3D;AACJ"}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file:///Users/bryansagbay/Documents/nextjs-flutter-login-api/src/models/User.ts"],"sourcesContent":["import mongoose,{ Schema, Document, ObjectId} from \"mongoose\";\n\n\nexport interface IUser {\n    _id?: ObjectId | string | undefined;\n    email: string;\n    password: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\nexport interface IUserSchema extends Document {\n    email: string;\n    password: string;\n    createdAt?: Date;\n    updatedAt?: Date;\n}\n\nconst UserSchema: Schema = new Schema(\n    {\n        email: { type: String, required: true, unique: true },\n        password: { type: String, required: true },\n    },{\n        versionKey: false,\n        timestamps: true,\n    }\n\n);\n\n\nconst User = mongoose.models.User || mongoose.model(\"User\", UserSchema)\nexport default User;"],"names":[],"mappings":";;;AAAA;;AAkBA,MAAM,aAAqB,IAAI,yGAAA,CAAA,SAAM,CACjC;IACI,OAAO;QAAE,MAAM;QAAQ,UAAU;QAAM,QAAQ;IAAK;IACpD,UAAU;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC7C,GAAE;IACE,YAAY;IACZ,YAAY;AAChB;AAKJ,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCAC7C"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/bryansagbay/Documents/nextjs-flutter-login-api/src/utils/messages.ts"],"sourcesContent":["export const messages = {\n    error: {\n        needProps: 'Porfavor ingresa email, password and confirmPassword',\n        emailNotValid: 'Email no valido:',\n        isValidPassword: 'Porfavor revisa que las contraseñas coincidan',\n        emailExist: 'El usuario ya existe',\n        default: 'Algo salió mal',\n        UserNotFound: 'Usuario no encontrado',\n        incorredPassword: 'Contraseña incorrecta',\n    },\n    success: {\n        userCreated: 'Usuario creado exitosamente',\n        userLogged: 'Usuario logeado exitosamente',\n        emailSend: 'Correo enviado exitosamente'\n    }\n\n};"],"names":[],"mappings":";;;AAAO,MAAM,WAAW;IACpB,OAAO;QACH,WAAW;QACX,eAAe;QACf,iBAAiB;QACjB,YAAY;QACZ,SAAS;QACT,cAAc;QACd,kBAAkB;IACtB;IACA,SAAS;QACL,aAAa;QACb,YAAY;QACZ,WAAW;IACf;AAEJ"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///Users/bryansagbay/Documents/nextjs-flutter-login-api/src/app/api/auth/forget-password/route.ts"],"sourcesContent":["import { connectMongoDB } from \"@/libs/database\";\nimport User from \"@/models/User\";\nimport { messages } from \"@/utils/messages\";\nimport { NextRequest, NextResponse } from \"next/server\";\nimport { Resend } from \"resend\";\nimport jwt from \"jsonwebtoken\";\n\nconst resend = new Resend(\"re_PfHrGNtr_EoRBxHzt7dHPiM1hozAG2awe\")\n\nexport async function POST(request: NextRequest) {\n    try{\n        const body: {email: string} = await request.json();\n\n        const {email} = body;\n\n        await connectMongoDB();\n\n        const userFind = await User.findOne({email});\n\n        // validamos que el usuario exista\n        if(!userFind){\n            return NextResponse.json(\n                {\n                    message: messages.error.UserNotFound\n                },\n                {\n                    status: 400\n                }\n            )};\n\n        const tokenData = {\n            email: userFind.email,\n            userId: userFind._id\n        };\n\n        const token = jwt.sign({data: tokenData},\"secreto\",{expiresIn: 86400});\n        \n        const forgetUrl = `http://localhost:3000/change-password?token=${token}`;\n\n        await resend.emails.send({\n            from: \"onboarding@resend.dev\",\n            //to: email,\n            to:  \"bryansagbay01@gmail.com\",\n            subject: \"Recuperar contraseña\",\n            html: \"<h1>Recuperar contraseña<h1>\"\n        });\n\n        return NextResponse.json(\n            {\n                message: messages.success.emailSend\n            },{\n                status: 200\n            });\n\n\n    } catch (error) {\n        return NextResponse.json(\n            {\n                message: messages.error.default, error\n            },{\n                status: 500\n            }\n        );\n    }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;AAEA,MAAM,SAAS,IAAI,0IAAA,CAAA,SAAM,CAAC;AAEnB,eAAe,KAAK,OAAoB;IAC3C,IAAG;QACC,MAAM,OAAwB,MAAM,QAAQ,IAAI;QAEhD,MAAM,EAAC,KAAK,EAAC,GAAG;QAEhB,MAAM,CAAA,GAAA,yHAAA,CAAA,iBAAc,AAAD;QAEnB,MAAM,WAAW,MAAM,uHAAA,CAAA,UAAI,CAAC,OAAO,CAAC;YAAC;QAAK;QAE1C,kCAAkC;QAClC,IAAG,CAAC,UAAS;YACT,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;gBACI,SAAS,0HAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,YAAY;YACxC,GACA;gBACI,QAAQ;YACZ;QACH;;QAEL,MAAM,YAAY;YACd,OAAO,SAAS,KAAK;YACrB,QAAQ,SAAS,GAAG;QACxB;QAEA,MAAM,QAAQ,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC;YAAC,MAAM;QAAS,GAAE,WAAU;YAAC,WAAW;QAAK;QAEpE,MAAM,YAAY,CAAC,4CAA4C,EAAE,OAAO;QAExE,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;YACrB,MAAM;YACN,YAAY;YACZ,IAAK;YACL,SAAS;YACT,MAAM;QACV;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YACI,SAAS,0HAAA,CAAA,WAAQ,CAAC,OAAO,CAAC,SAAS;QACvC,GAAE;YACE,QAAQ;QACZ;IAGR,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YACI,SAAS,0HAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,OAAO;YAAE;QACrC,GAAE;YACE,QAAQ;QACZ;IAER;AACJ"}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}